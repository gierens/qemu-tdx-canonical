# autogenerated file, please edit debian/control-in
Source: qemu
Section: otherosfs
Priority: optional
Maintainer: Ubuntu Developers <ubuntu-devel-discuss@lists.ubuntu.com>
XSBC-Original-Maintainer: Debian QEMU Team <pkg-qemu-devel@lists.alioth.debian.org>
Uploaders: Michael Tokarev <mjt@tls.msk.ru>
Build-Depends: debhelper-compat (= 13),
 python3:any,
 python3-venv:any,
 python3:any (>> 3.11) | python3-tomli,
 meson (>> 0.63.0~), ninja-build,
 flex, bison,
# for :native suffix see #995622
 python3-sphinx:native, python3-sphinx-rtd-theme:native,
Build-Depends-Arch:
# In comments below we also specify (system-specific) arguments
# to qemu's configure script, -- optional features which depend
# on build-dependencies.
# always needed
 pkgconf, libglib2.0-dev, zlib1g-dev,
# target/hexagon/ builds a build-time (ie: native) tool using glib
 pkgconf:native, libglib2.0-dev:native,
# iasl (from acpica-tools) is used only in a single test these days, not for building
# acpica-tools,
# libcapstone is in universe in ubuntu
# --enable-linux-aio	linux-any
 libaio-dev            [linux-any],
# libsndio is in universe in ubuntu
# --disable-sndio
# --audio-drv-list=pipewire,pa,alsa,jack,oss,sdl	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
##--audio-drv-list=pa,oss	kfreebsd-any
 libjack-dev    [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libpulse-dev   [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libasound2-dev [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libpipewire-0.3-dev (>> 0.3.60) [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# for virtfs (now in libc6)
# --enable-attr
# --enable-bpf	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libbpf-dev	[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-blkio	amd64 arm64 loong64 mips64 mips64el ppc64 ppc64el riscv64 s390x sparc64
 libblkio-dev	       [amd64 arm64 loong64 mips64 mips64el ppc64 ppc64el riscv64 s390x sparc64],
# --enable-brlapi	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libbrlapi-dev         [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-virtfs	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
# needed for virtfs
# --enable-cap-ng	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libcap-ng-dev         [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-curl
 libcurl4-gnutls-dev,
# --enable-fdt	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libfdt-dev	[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-fuse		 linux-any
 libfuse3-dev		[linux-any],
# --enable-gnutls
 gnutls-dev,
# --enable-gtk --enable-vte	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libgtk-3-dev    [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libvte-2.91-dev [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-libiscsi
 libiscsi-dev,
# --enable-curses	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libncurses-dev        [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-virglrenderer	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libvirglrenderer-dev          [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-opengl	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libepoxy-dev [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libdrm-dev   [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
 libgbm-dev   [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-libnfs
 libnfs-dev,
# --enable-numa	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libnuma-dev   [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-smartcard	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libcacard-dev		[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-pixman	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libpixman-1-dev	[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-rbd		amd64 arm64 loong64 mips64el ppc64el riscv64 s390x
 librbd-dev            [amd64 arm64 loong64 mips64el ppc64el riscv64 s390x],
# gluster is 64bit-only: #1039604
# --enable-glusterfs	 amd64 arm64 loong64 mips64 mips64el ppc64 ppc64el riscv64 s390x sparc64
 libglusterfs-dev	[amd64 arm64 loong64 mips64 mips64el ppc64 ppc64el riscv64 s390x sparc64],
# --enable-vnc-sasl	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libsasl2-dev		[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-sdl	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libsdl2-dev [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-seccomp	amd64 arm64 armel armhf i386 loong64 mips64el mipsel ppc64 ppc64el powerpc riscv64 s390x
 libseccomp-dev        [amd64 arm64 armel armhf i386 loong64 mips64el mipsel ppc64 ppc64el powerpc riscv64 s390x],
# --enable-slirp	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libslirp-dev		[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-spice	 amd64 arm64 armel armhf i386 mips64el mipsel ppc64el
 libspice-server-dev	[amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
# --enable-rdma		linux-any
 librdmacm-dev [linux-any], libibverbs-dev [linux-any], libibumad-dev [linux-any],
# --enable-linux-io-uring	linux-any
 liburing-dev                  [linux-any],
# --enable-libusb	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libusb-1.0-0-dev      [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-usb-redir	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libusbredirparser-dev [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-libssh
 libssh-dev,
# --enable-zstd
 libzstd-dev,
# vde is debian-only since ubuntu/vde2 is in universe
 libxen-dev [linux-amd64],
# --enable-nettle	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 nettle-dev		[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# other optional features we enable
# --enable-libudev
# needed for qga?
 libudev-dev [linux-any],
# --enable-vnc	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
# --enable-vnc-jpeg	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libjpeg-dev	[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-png	 amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
 libpng-dev	[amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64],
# --enable-libpmem	amd64 arm64
 libpmem-dev           [amd64 arm64],
# --enable-kvm		amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
# --enable-vhost-net	amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64	# is it really linux-specific?
##--enable-lzo todo, for (memory) dumps
##--enable-netmap todo bsd
##--enable-xen-pci-passthrough todo
## auth-pam - for auth for vnc&Co using PAM
#
# the testsuite:
#XXX-cyclic-test-dep-dak-bug seabios [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64] <!nocheck>,
# ipxe-qemu [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64] <!nocheck>,
# various firmware files (kvmvapic.bin &Co), older qemu-system-data should work
#XXX-cyclic-test-dep-dak-bug qemu-system-data [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64] <!nocheck>,
# vdso: by default Build-Depend-Arch on qemu-system-data with vdso-archive inside
#  pkg.qemu.use-upstream-vdso - always use upstream pre-built linux-user/vdso files,
#     do not embed vdso files into qemu-system-data binary package
#  pkg.qemu.omit-vdso-build-dep - do not Build-Depend-Arch: qemu-user-data for vdso
#     (allows to build and use vdso files with single arch+indep build)
# With each upstream, check if vdso code changed and bump the version:
Build-Depends-Indep:
# compiler used to build i386 firmware
 gcc-i686-linux-gnu,
# pc-bios/*.dts => *.dtb (PPC firmware)
 device-tree-compiler,
 gcc-s390x-linux-gnu,
# qemu-palcode/palcode-clipper
 gcc-alpha-linux-gnu,
# u-boot code
 gcc-powerpc-linux-gnu,
# skiboot firmware, openbios
 gcc-powerpc64-linux-gnu,
# skiboot includes <openssl/something.h>
 libssl-dev,
# openbios
 gcc-sparc64-linux-gnu, fcode-utils, xsltproc,
# hppa-firmware (32 and 64 bit)
 gcc-hppa-linux-gnu, gcc-hppa64-linux-gnu,
# opensbi
 gcc-riscv64-linux-gnu,
# vbootrom/npcm7xx_bootrom
 gcc-arm-linux-gnueabi, libc6-dev-armel-cross,
# vdso (configure:probe_target_compiler() needs libc too):
 gcc-aarch64-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-arm64-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-arm-linux-gnueabi <!pkg.qemu.use-upstream-vdso>, libc6-dev-armel-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-hppa-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-hppa-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-i686-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-i386-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-loongarch64-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-loong64-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-powerpc64-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-ppc64-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-riscv64-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-riscv64-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-s390x-linux-gnu <!pkg.qemu.use-upstream-vdso>, libc6-dev-s390x-cross <!pkg.qemu.use-upstream-vdso>,
 gcc-x86-64-linux-gnu <!pkg.qemu.use-upstream-vdso>,
Build-Conflicts: oss4-dev
Standards-Version: 4.6.2
Homepage: http://www.qemu.org/
Rules-Requires-Root: no
XS-Debian-Vcs-Browser: https://salsa.debian.org/qemu-team/qemu
XS-Debian-Vcs-Git: https://salsa.debian.org/qemu-team/qemu.git
Vcs-Browser: https://git.launchpad.net/ubuntu/+source/qemu
Vcs-Git: https://git.launchpad.net/ubuntu/+source/qemu

Package: qemu-system
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${misc:Depends},
 qemu-system-arm,
 qemu-system-mips,
 qemu-system-ppc,
 qemu-system-sparc,
 qemu-system-x86,
 qemu-system-s390x,
 qemu-system-misc
Description: QEMU full system emulation binaries
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This metapackage provides the full system emulation binaries for all supported
 targets, by depending on all per-architecture system emulation packages which
 QEMU supports.

Package: qemu-block-extra
Architecture: amd64 arm arm64 armel armhf hppa i386 kfreebsd-amd64 kfreebsd-i386 loong64 m68k mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sh4 sparc sparc64 x32
Multi-Arch: no
Depends: ${misc:Depends}, ${shlibs:Depends},
# we need to ensure qemu-block-extra is upgraded with qemu-system-* or qemu-utils
 qemu-system-any (= ${binary:Version}) [amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64] | qemu-utils (= ${binary:Version}),
Enhances: qemu-utils, qemu-system-misc,
 qemu-system-arm, qemu-system-mips, qemu-system-sparc, qemu-system-x86,
Description: extra block backend modules for qemu-system and qemu-utils
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides extra block device backend modules for qemu-system
 emulation and qemu-img from qemu-utils package, which are rarely used and
 has extra dependencies.

Package: qemu-block-supplemental
Architecture: amd64 arm64 ppc64el riscv64 s390x
Multi-Arch: no
Depends: ${misc:Depends}, ${shlibs:Depends},
# we need to ensure qemu-block-supplemental is upgraded with qemu-system-* or qemu-utils
 qemu-system-any (= ${binary:Version}) [amd64 arm64 armhf ppc64el riscv64 s390x] | qemu-utils (= ${binary:Version}),
Enhances: qemu-utils, qemu-system-misc,
 qemu-system-arm, qemu-system-mips, qemu-system-sparc, qemu-system-x86,
 qemu-system-s390x,
Breaks: qemu-block-extra (<< 1:8.2.0+ds-4ubuntu2~)
Replaces: qemu-block-extra (<< 1:8.2.0+ds-4ubuntu2~)
Description: supplemental block backend modules for qemu-system and qemu-utils
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides supplemental block device backend modules for qemu-system
 emulation and qemu-img from qemu-utils package.
 .
 Currently, the following modules are shipped in this package:
  block-glusterfs block-blkio

Package: qemu-system-data
Architecture: all
Multi-Arch: foreign
Conflicts: sgabios, qemu-skiboot, openbios-sparc, openbios-ppc, qemu-slof,
Replaces:  sgabios, openbios-sparc, openbios-ppc, qemu-slof,
 qemu-system-ppc (<< 1:6.1-4~),
 qemu-system-common (<< 1:8.2.2+ds-1~),
Breaks: qemu-system-ppc (<< 1:6.1-4~),
 qemu-system-common (<< 1:8.2.2+ds-1~),
Provides: qemu-keymaps, sgabios, qemu-skiboot, openbios-sparc, openbios-ppc, qemu-slof,
Depends: ${misc:Depends}
Description: QEMU full system emulation (data files)
 This package provides architecture-neutral data files
 (such as keyboard definitions, icons) for system-mode
 QEMU emulation (qemu-system-*) packages.

Package: qemu-system-common
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: no
Build-Profiles: <!pkg.qemu.omit-system>
Breaks: libvirt-daemon (<< 7.2.0-1)
Depends: ${misc:Depends}, ${shlibs:Depends},
# to fix wrong acl for newly created device node on ubuntu:
 acl
Description: QEMU full system emulation binaries (common files)
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides common files needed for target-specific
 full system emulation (qemu-system-*) packages.

Package: qemu-system-gui
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
#XXX M-A: same does not really work for now due to /usr/lib/qemu/vhost-user-gpu
#XXX we'll deal with this if some actual need arises,
#XXX by moving that binary back to q-s-common or packaging it separately
#Multi-Arch: same
Depends: ${misc:Depends}, ${shlibs:Depends},
# ui-* depends on ui-opengl
 qemu-system-modules-opengl (= ${binary:Version}),
# we need to ensure qemu-system-gui is upgraded with qemu-system-*
 qemu-system-any (= ${binary:Version}),
# libgl1 is dynamically loaded by sdl display code
 libgl1,
# we moved vhost-user-gpu files here from qemu-system-common at 6.1-4
Replaces: qemu-system-common (<< 1:6.1+dfsg-4~)
Description: QEMU full system emulation binaries (graphical display and audio modules)
 This package provides optional graphical guest display modules (currently GTK
 and SDL) and audio backend modules for full system emulation (qemu-system-*)
 packages.
 .
 This package is not a management/control/GUI interface for qemu, use something
 else (like virt-manager) for that.

Package: qemu-system-modules-spice
Architecture: amd64 arm64 armel armhf i386 mips64el mipsel ppc64el
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${misc:Depends}, ${shlibs:Depends},
# spice modules depends on ui-opengl
 qemu-system-modules-opengl (= ${binary:Version}),
# we need to ensure qemu-system-modules-spice is upgraded with qemu-system-*
 qemu-system-any (= ${binary:Version}),
Replaces: qemu-system-common (<< 1:8.1.0+ds-1~exp2~)
Breaks:   qemu-system-common (<< 1:8.1.0+ds-1~exp2~)
Description: QEMU full system emulation binaries (spice display modules)
 This package provides optional spice display (qxl and spice-app) and audio
 support modules for QEMU full system emulation (qemu-system-*) packages.

Package: qemu-system-modules-opengl
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${misc:Depends}, ${shlibs:Depends},
# we need to ensure qemu-system-modules-opengl is upgraded when qemu-system is upgraded
 qemu-system-any (= ${binary:Version}),
Replaces: qemu-system-common (<< 1:8.1.0+ds-1~exp2~), qemu-system-gui (<< 1:8.1.0+ds-1~exp2~)
Breaks:   qemu-system-common (<< 1:8.1.0+ds-1~exp2~), qemu-system-gui (<< 1:8.1.0+ds-1~exp2~)
Description: QEMU full system emulation binaries (OpenGL display modules)
 This package provides optional OpenGL display support modules for QEMU full
 system emulation (qemu-system-*) packages.  It also provides D-Bus display
 type.

Package: qemu-system-misc
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
# alpha uses vgabios
# alpha m68k sh4 uses bootroms
 seabios,
 ipxe-qemu,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (miscellaneous)
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides the full system emulation binaries to emulate
 various other hardware which did not made into separate packages.
 Emulators for the following architectures are provided:
  ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

Package: qemu-system-arm
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
# aarch64 arm uses bootroms
 ipxe-qemu,
 ipxe-qemu-256k-compat-efi-roms,
 qemu-efi-aarch64, qemu-efi-arm,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (arm)
 QEMU is a fast processor emulator: currently the package supports
 ARM emulation. By using dynamic translation it achieves
 reasonable speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following arm hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

Package: qemu-system-mips
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
# all mips targets uses vgabios and bootroms
 seabios,
 ipxe-qemu,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (mips)
 QEMU is a fast processor emulator: currently the package supports
 MIPS emulation. By using dynamic translation it achieves
 reasonable speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following mips hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

Package: qemu-system-ppc
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
 ipxe-qemu-256k-compat-efi-roms,
# ppc targets use vgabios-stdvga and bootroms
 seabios,
 ipxe-qemu,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (ppc)
 QEMU is a fast processor emulator: currently the package supports
 PowerPC emulation. By using dynamic translation it achieves
 reasonable speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following PowerPC hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

Package: qemu-system-sparc
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
# sparc64 uses vgabios-stdvga and bootroms
 seabios,
 ipxe-qemu,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (sparc)
 QEMU is a fast processor emulator: currently the package supports
 SPARC emulation. By using dynamic translation it achieves
 reasonable speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following sparc hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

Package: qemu-system-s390x
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
Recommends: qemu-utils,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (s390x)
 QEMU is a fast processor emulator: currently the package supports
 s390x emulation. By using dynamic translation it achieves reasonable
 speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following s390x hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.

# xen support generally is disabled on ubuntu, for a while we used
# an extra build with xen enabled. In the meantime Debian followed that
# approach but with a different name, so add a transitional until
# after 24.04
Package: qemu-system-x86-xen
Architecture: amd64
Multi-Arch: foreign
Section: oldlibs
Depends: qemu-system-xen (>= 1:7.0+dfsg-7ubuntu1), ${misc:Depends}
Description: QEMU full system emulation binaries (x86)
 The former qemu-system-x86-xen binaries are now in qemu-system-xen.
 .
 This is a transitional package. You can safely remove it.

Package: qemu-system-x86
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-system>
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-common (= ${binary:Version}), qemu-system-data (>> ${source:Upstream-Version}~),
 seabios (>> 1.16.3-1~),
 ipxe-qemu,
Recommends: qemu-utils,
 ipxe-qemu-256k-compat-efi-roms,
 ovmf,
 qemu-system-gui (= ${binary:Version}),
 qemu-system-modules-spice (= ${binary:Version}) [amd64 arm64 armel armhf i386 mips64el mipsel ppc64el],
 qemu-system-modules-opengl (= ${binary:Version}),
 qemu-block-extra (= ${binary:Version}),
 cpu-checker,
Suggests: samba, vde2,
Provides: ${qemu:Provides}
Description: QEMU full system emulation binaries (x86)
 QEMU is a fast processor emulator: currently the package supports
 i386 and x86-64 emulation. By using dynamic translation it achieves
 reasonable speed while being easy to port on new host CPUs.
 .
 This package provides the full system emulation binaries to emulate
 the following x86 hardware: ${qemu:archlist}.
 .
 In system emulation mode QEMU emulates a full system, including a processor
 and various peripherals.  It enables easier testing and debugging of system
 code.  It can also be used to provide virtual hosting of several virtual
 machines on a single server.
 .
 On x86 host hardware this package also enables KVM kernel virtual machine
 usage on systems which supports it.

Package: qemu-system-xen
Architecture: amd64
Multi-Arch: no
Build-Profiles: <!pkg.qemu.omit-system-xen>
# do we really need qemu-system-data? keymaps only?
Depends: ${shlibs:Depends}, ${misc:Depends}, qemu-system-data (>> ${source:Upstream-Version}~),
 seabios
Recommends: qemu-utils,
 ovmf,
# For the transition from the former qemu-system-x86-xen name
Breaks: qemu-system-x86-xen (<<1:7.0+dfsg-7ubuntu1)
Replaces: qemu-system-x86-xen (<<1:7.0+dfsg-7ubuntu1)
Provides: qemu-system-x86-xen
Description: QEMU full system emulation (Xen helper package)
 This package provides the i386 system emulation binary to work
 together with the Xen hypervisor for some types of DomUs.
 This package is not useful by its own.

Package: qemu-user
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-user>
Depends: ${shlibs:Depends}, ${misc:Depends}
Recommends: qemu-user-binfmt
Description: QEMU user mode emulation binaries
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides the user mode emulation binaries. In this mode
 QEMU can launch Linux processes compiled for one CPU on another CPU.
 .
 If qemu-user-binfmt package is also installed, it will register binary
 format handlers from this qemu-user package with the kernel so it will
 be possible to run foreign binaries directly.  However, this might not
 be suitable for using inside foreign chroots, in which case it is
 possible to use qemu-user-static package instead of qemu-user-binmft, --
 qemu-user-static will register statically linked binfmt handlers instead.

Package: qemu-user-static
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Built-Using: ${built-using}
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-user-static>
Depends: ${misc:Depends}
# Recommend systemd for binfmt-misc registration
Recommends: systemd
Provides: qemu-user-binfmt
Conflicts: qemu-user-binfmt
Description: QEMU user mode emulation binaries (static version)
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides the user mode emulation binaries, built
 statically. In this mode QEMU can launch Linux processes compiled for
 one CPU on another CPU.
 .
 qemu-user-static package will register binary formats which the provided
 emulators can handle, so that it will be possible to run foreign binaries
 directly.

Package: qemu-user-binfmt
Architecture: amd64 arm arm64 armel armhf i386 loong64 mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sparc sparc64
Multi-Arch: foreign
Build-Profiles: <!pkg.qemu.omit-user>
Depends: ${misc:Depends}, qemu-user (= ${binary:Version})
# Recommend systemd for binfmt-misc registration
Recommends: systemd
Conflicts: qemu-user-static
Description: QEMU user mode binfmt registration for qemu-user
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides binfmt support registration for the user mode
 emulation binaries from qemu-user.  This is an empty package, it does
 not contain any additional files, only registration scripts which run
 at install and remove times.

Package: qemu-utils
Architecture: amd64 arm arm64 armel armhf hppa i386 kfreebsd-amd64 kfreebsd-i386 loong64 m68k mips mips64 mips64el mipsel powerpc powerpcspe ppc64 ppc64el riscv64 s390x sh4 sparc sparc64 x32
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends},
Recommends:
 qemu-block-extra (= ${binary:Version}),
Replaces:
# qemu-storage-daemon and qemu-block-driver.7 has been moved from q-s-c.
 qemu-system-common (<< 1:8.0+dfsg-5~),
Breaks:
 qemu-system-common (<< 1:8.0+dfsg-5~),
Description: QEMU utilities
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides QEMU related utilities:
  * qemu-img: QEMU disk image utility
  * qemu-io:  QEMU disk exerciser
  * qemu-nbd: QEMU disk network block device server

Package: qemu-guest-agent
Architecture: any
Multi-Arch: foreign
Depends: ${shlibs:Depends}, ${misc:Depends}
Pre-Depends: ${misc:Pre-Depends}
Description: Guest-side qemu-system agent
 QEMU is a fast processor emulator: currently the package supports Alpha, ARM,
 CRIS, i386, LoongArch, M68k (ColdFire), MicroBlaze, MIPS, PowerPC, RISC-V,
 S390x, SH4, SPARC, x86-64, Xtensa and other emulations. By using dynamic
 translation it achieves reasonable speed while being easy to port on new host
 CPUs.
 .
 This package provides a daemon (agent) to run inside qemu-system
 guests (full system emulation).  It communicates with the host using
 a virtio-serial channel org.qemu.guest_agent.0, and allows one to perform
 some functions in the guest from the host, including:
  - querying and setting guest system time
  - performing guest filesystem sync operation
  - initiating guest shutdown or suspend to ram
  - accessing guest files
  - freezing/thawing guest filesystem operations
  - others.
 .
 Install this package on a system which is running as guest inside
 qemu virtual machine.  It is not used on the host.

#Package: qemu-system-for-host
## This is actually all architectures for which qemu-system (softmmu) target is implemented
#Architecture: any
#Multi-Arch: same
#Depends: ${qemu:for-host} (=${binary:Version})
#Description: QEMU full system emulation (dependency-only package for the host architecture)
# This package pulls one of qemu-system-* subpackages which contains
# qemu-system-${}{DEB_HOST_ARCH_CPU} binary specific for the host
# architecture. This one depends on ${qemu:for-host}.
#
